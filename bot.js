/*
*
* WARNING!
* –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –∫–æ–¥–∞ –≤ –ø–æ–ª–Ω–æ–π –º–µ—Ä–µ –∏–ª–∏ —á–∞—Å—Ç–∏—á–Ω–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ –Ω–µ–∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –æ—Å–Ω–æ–≤–∞–Ω–∏—è—Ö –ø–æ—Å–ª–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–∞.
* –î–ª—è —Å–≤—è–∑–∏ —Å –∞–≤—Ç–æ—Ä–æ–º –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã:
* Discord: zziger#8040
* Telegramm: @zziger
* VK: https://vk.com/zziger (–∞–≤—Ç–æ—Ä —Ç—É—Ç –±—ã–≤–∞–µ—Ç —Ä–µ–¥–∫–æ)
*
* –ë–æ—Ç –Ω–∞–ø–∏—Å–∞–Ω —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ GameSpace –≤ Discord.
* –°—Å—ã–ª–∫–∞-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä: https://discord.io/gspace
*
* Copyright 2018 ¬© GameSpace. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.
* –ù–∞—Ä—É—à–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä—Å–∫–∏—Ö –ø—Ä–∞–≤ –ø—Ä–µ—Å–ª–µ–¥—É–µ—Ç—Å—è –∑–∞–∫–æ–Ω–æ–º.
*
* CC-BY-NC-SA
* http://creativecommons.org/licenses/by-nc-sa/4.0/
*
* */
const Discord = require('discord.js');
const util = require("util");
const https = require("https");
const request = require("request");
const querystring = require('querystring');
const colorParse = require('parse-color');
const getImageColors = require('get-image-colors');
const client = new Discord.Client({ autofetch: [
        'MESSAGE_CREATE',
        'MESSAGE_UPDATE',
        'MESSAGE_REACTION_ADD',
        'MESSAGE_REACTION_REMOVE',
    ] });
const rule = {game_admin: "417312252463677451", game_owner: "417267817763831808", content_maker: "417267817763831808", game_sponsor: "417396657668358165", own: "419562566512017415"};
const creators = ['421030089732653057'];
const emojis = {up:'418748638081318912', stop:'418748635820326912', shuffle:'418748638173462528', repeat1:'418748637531865089', repeat:'418748637649174535', play:'418748635765800961', pause:'418748635329855489', ok:'418748637502504972', forward:'418748554899881994', down:'418748613733122058', back:'418748554014752770', ABCD:'418748554518069249', abcd:'418748553985261568', abc:'418748552802598927', protiv:'419121914959626240', neznayu:'419121999277719562', za:'419122029854457866', obnimayu:'421647583551684609', money:'422055316792803349', error: '424467513578094592', facepalm: '429213277688561664'};
const commandCooldown = new Set();
const botFullRights = ['418096126957453337', '421558850681044993'];
const colors = ['e74c3c', 'e67e22', 'f1c40f', '2ecc71', '1abc9c', '3498db', '9b59b6'];
let colors_e = false;
let splooter = false;

function color () {
    if (colors_e)
    colors.forEach(function (item, number) {
        if (colors_e)
        setTimeout(function () {if (colors_e) {client.guilds.get('417266233562365952').roles.get('428894052960960513').setColor(item).catch();if(number === colors.length-1) setTimeout(function () {color()}, 2000)}}, number*2000);
    });
}


/** @namespace process.env.PREFIX */
/** @namespace process.env.BOT_TOKEN */
/** @namespace process.env.SITE_DOMAIN */
/** @namespace process.env.SECRET_KEY */
/** @namespace process.env.WEBHOOK_ID */
/** @namespace process.env.WEBHOOK_TOKEN */





function declOfNum(number, titles) {
    let cases = [2, 0, 1, 1, 1, 2];
    return titles[ (number%100>4 && number%100<20)? 2 : cases[(number%10<5)?number%10:5] ];
}

function isNumeric(n) {
    return !isNaN(parseFloat(n)) && isFinite(n);
}

function setBigTimeout(func, timeout) {
    if (timeout > 0x7FFFFFFF)
        setTimeout(function() {setBigTimeout(func, timeout-0x7FFFFFFF);}, 0x7FFFFFFF);
    else
        setTimeout(func, timeout);
}

function  getStringCapsPercent(string) {
    let str = string.trim().replace(/<a?:(.*?):\d+>/g, '');
    let length = str.replace(/[^a-z–∞-—èA-Z–ê-–Ø–Ü–á–Å—ë—ñ—ó]/g, '').length;
    if (length === 0) return;
    let caps = str.replace(/[^A-Z–ê-–Ø–Ü–á–Å]/g, '').length;
    return Math.round(caps/length*100);
}

function getRandomInt(min, max) {
  return Math.floor(Math.random() * (max - min)) + min;
}

async function multipleReact(message, arr) {
    if (arr !== []) {
        await message.react(arr.shift()).catch(console.error).then(function () {multipleReact(message,arr).catch(console.error);});
    }
}

function embed_error(text) {
    let error_emoji = client.emojis.get(emojis.error);
    return new Discord.RichEmbed()
        .setTitle('–û—à–∏–±–∫–∞')
        .setColor('#C34E4E')
        .setFooter('GameüåÄSpace')
        .setDescription(`${error_emoji} ${text}`);
}

async function unmute(member, mute_id, time, reason = '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–º—É—Ç') {
    setBigTimeout( function () {
        request(`http://${process.env.SITE_DOMAIN}/unmute.php?mute=${mute_id}&reason=${encodeURIComponent(reason)}&secret=${encodeURIComponent(process.env.SECRET_KEY)}&user=${client.user.id}`, async function (error, response, body) {
            try {
                let data = JSON.parse(body);
            if (!data['error']) {
                if (member.roles.has('450162523199766528')) {
                    member.removeRole('450162523199766528').catch(console.error);
                    member.user.send('–í—ã –±—ã–ª–∏ —Ä–∞–∑–º—É—á–µ–Ω—ã.');
                }
            }
            } catch (Exception) {}
        });
    }, time+1000);
}

function add_command(aliases, onlyInBotChat, message, command, args, access_type, access_params, command_function) {

    if (onlyInBotChat) {
        if (!botFullRights.includes(message.channel.id)) return;
    }

    if (typeof aliases !== 'object')
        return console.error('Error: command aliases aren\'n array');

    let embed;

    let error = false;
    if (!creators.includes(message.author.id))
    if (access_type === 'rules') {
        let rights_arr = [];
        let err = false;
        access_params.forEach(function (item) {
            if (!message.member.hasPermission(item, false, true, true)) {
                err = true;
                rights_arr.push(item);
            }
        });
        if (err === true) {
            let a = '';
            let required = '–∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–µ–±—É—é—Ç—Å—è';
            let rigths = rights_arr.join('`, `');
            if (access_params.length === 1) {
                a = '–∞';
                required = '–∫–æ—Ç–æ—Ä–æ–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è';
            }
            embed = embed_error(`${message.author} (\`${message.author.tag}\`), –∏–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ —É –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤${a} \`${rigths}\`, ${required} –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã\n\n–ï—Å–ª–∏ –í—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –Ω–µ —Ç–∞–∫ - –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ <@421030089732653057>`);
            error = true;
        }
    } else if (access_type === 'roles') {
        if (!message.member.roles.some(r=>access_params.includes(r.id))) {
            let a = '–Ω–∏ –æ–¥–Ω–æ–π –∏–∑ —Ä–æ–ª–µ–π';
            let roles = '';
            let required = '–∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–µ–±—É—é—Ç—Å—è';
            access_params.forEach(function (item) {
                roles = roles + message.guild.roles.get(item);
            });
            if (access_params.length === 1) {
                a = '—Ä–æ–ª–∏';
                required = '–∫–æ—Ç–æ—Ä–∞—è —Ç—Ä–µ–±—É–µ—Ç—Å—è';
            }
            embed = embed_error(`${message.author} (\`${message.author.tag}\`), –∏–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ —É –í–∞—Å –Ω–µ—Ç ${a} ${roles}, ${required} –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã\n\n–ï—Å–ª–∏ –í—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –Ω–µ —Ç–∞–∫ - –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ <@421030089732653057>`);
            error = true;
        }
    } else if (access_type === 'creat') {
        embed = embed_error(`${message.author} (\`${message.author.tag}\`), –∏–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º –±–æ—Ç–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã\n\n–ï—Å–ª–∏ –í—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –Ω–µ —Ç–∞–∫ - –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ <@421030089732653057>`);
        error = true;
    }


    if (!aliases.includes(command)) return;
    if (error) return message.channel.send({embed});

    if (!message.member.roles.some(r=>[rule.game_owner, rule.game_owner, rule.own].includes(r.id)))
    if (!commandCooldown.has(message.author.id)) {
        commandCooldown.add(message.author.id);
        setTimeout(() => {
            commandCooldown.delete(message.author.id);
        }, 10000);
    } else {
        return message.channel.send('–•—ç–π-—Ö—ç–π, '+message.author+', –æ—Å—Ç—ã–Ω—å! –¢–µ–±–µ –Ω—É–∂–Ω–æ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å, —á—Ç–æ–± –µ—â–µ —Ä–∞–∑ –æ–±—Ä–∞—Ç–∏—Ç—Å—è –∫–æ –º–Ω–µ :D');
    }
    command_function();
}

String.prototype.replaceAll = function(search, replacement) {
    let target = this;
    return target.replace(new RegExp(search, 'g'), replacement);
};


client.on('ready', () => {
	console.log('Bot loaded');
	client.user.setPresence({ game: { name: `–∑–∞ GameSpace'–æ–º`, type: 3 } }).catch();
    request(`http://${process.env.SITE_DOMAIN}/get_mute.php?&secret=${encodeURIComponent(process.env.SECRET_KEY)}&user=${client.user.id}`, async function (error, response, body) {
        let data = JSON.parse(body);
        data.forEach(function (item) {
            unmute(client.guilds.get('417266233562365952').members.get(item[0]['discord_id']), item[0]['id'], item[1]*1000).catch(console.err);
            if (item[1] !== 0)
            console.log(`//--- –í–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω –º—É—Ç ${client.guilds.get('417266233562365952').members.get(item[0]['discord_id']).displayName} –Ω–∞ ${item[1]}—Å ---//`);
            else
                console.log(`//--- ${client.guilds.get('417266233562365952').members.get(item[0]['discord_id']).displayName} –±—ã–ª —Ä–∞–∑–º—É—á–µ–Ω ---//`)
        });
    });
});


client.on("messageUpdate", async (old_message, message) => {
    if (['448815323840380929', '465557872097492993'].includes(message.channel.id)) return;
	 //–ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Ç–∏–ø–æ–≤ –∫–∞–Ω–∞–ª–æ–≤
    if (['dm', 'group', 'category', 'voice'].includes(message.channel.type)) return;
	
    if (getStringCapsPercent(message.content) > 80 && message.content.replace(/<a?:(.*?):\d+>/g, '').replace(/[^a-z–∞-—èA-Z–ê-–Ø–Ü–á–Å—ë—ñ—ó]/g, '').length > 5 && message.content !== '' && !message.author.bot) {
        let reason = '–ö–∞–ø—Å –≤ —á–∞—Ç–µ. –°–æ–æ–±—â–µ–Ω–∏–µ:\n'+message.content;
        request(`http://${process.env.SITE_DOMAIN}/warn.php?id=${message.author.id}&reason=${encodeURIComponent(reason)}&secret=${encodeURIComponent(process.env.SECRET_KEY)}&user=${client.user.id}`, function (error, response, body) {
            try {
            let data = JSON.parse(body);
            let footer = 'GameüåÄSpace #'+data.id;
            if (reason === null || typeof reason === 'undefined') reason = '–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞.';
            let embed = new Discord.RichEmbed()
                .setTitle('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ')
                // .setDescription(`**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** ${user.user}\n**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** ${message.author}\n**–ü—Ä–∏—á–∏–Ω–∞:**\n\n${reason}`)
                .addField('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', `${message.author} (\`${message.author.tag}\`)`, true)
                .addField('–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä', `${client.user} (\`${client.user.tag}\`)`, true)
                .setFooter(footer)
                .setColor('F1C40F');
            if (reason !== null && typeof reason !== undefined && reason !== '') embed.addField('–ü—Ä–∏—á–∏–Ω–∞', `${reason}`);
            message.channel.send(`${message.author} –ø–æ–ª—É—á–∏–ª –≤–∞—Ä–Ω –ø–æ –ø—Ä–∏—á–∏–Ω–µ \`–∫–∞–ø—Å –≤ —á–∞—Ç–µ\`. #${data.id}`);
            message.guild.channels.get('426756919777165312').send({embed});
            } catch (Exception) {message.channel.send({embed: embed_error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ-–≤–∞—Ä–Ω–∞.')})}
        });
    }

    let arr = ['gspace'];
    if (!message.member.roles.has('417267817763831808'))
    message.guild.fetchInvites().then(invites => {
        invites.forEach(invite => {
            arr.push(invite.code);
        });
        let matches = message.content.match(/discord(app\.com\/invite|\.gg|\.me|\.io)\/?([_a-zA-Z0-9]{1,32})/gi);
        if (matches)
        matches.forEach((match) => {
            let mtch = match.match(/discord(app\.com\/invite|\.gg|\.me|\.io)\/?([_a-zA-Z0-9]{1,32})/i);
            if (!arr.includes(mtch[3])) {
                let reason = '–û—Ç–ø—Ä–∞–≤–∏–ª –∏–Ω–≤–∞–π—Ç —Å—Å—ã–ª–∫—É: '+match;
                message.delete();
                request(`http://${process.env.SITE_DOMAIN}/warn.php?id=${message.author.id}&reason=${encodeURIComponent(reason)}&secret=${encodeURIComponent(process.env.SECRET_KEY)}&user=${client.user.id}`, function (error, response, body) {
                    try {
                        let data = JSON.parse(body);
                        let footer = 'GameüåÄSpace #'+data.id;
                        if (reason === null || typeof reason === 'undefined') reason = '–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞.';
                        let embed = new Discord.RichEmbed()
                            .setTitle('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ')
                            // .setDescription(`**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** ${user.user}\n**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** ${message.author}\n**–ü—Ä–∏—á–∏–Ω–∞:**\n\n${reason}`)
                            .addField('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', `${message.author} (\`${message.author.tag}\`)`, true)
                            .addField('–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä', `${client.user} (\`${client.user.tag}\`)`, true)
                            .setFooter(footer)
                            .setColor('F1C40F');
                        if (reason !== null && typeof reason !== undefined && reason !== '') embed.addField('–ü—Ä–∏—á–∏–Ω–∞', `${reason}`);
                        message.channel.send(`${message.author} –ø–æ–ª—É—á–∏–ª –≤–∞—Ä–Ω –ø–æ –ø—Ä–∏—á–∏–Ω–µ \`–∏–Ω–≤–∞–π—Ç-—Å—Å—ã–ª–∫–∞\`. #${data.id}`);
                        message.guild.channels.get('426756919777165312').send('', {embed});
                    } catch (Exception) {console.log(Exception);message.channel.send({embed: embed_error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ-–≤–∞—Ä–Ω–∞.')})}
                });
            }
        })
    });
});

client.on('guildMemberUpdate', function (old_member, new_member) {
    if (splooter)
    if (new_member.user.id === '329240046337261569') {
        new_member.setNickname('splooter').catch();
    }
});

client.on("message", async message => {
    if (['448815323840380929', '465557872097492993'].includes(message.channel.id)) return;

//–°–∏—Å—Ç–µ–º–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    if (message.channel.id === '421260737281785856') {
        if(!message.author.bot) return;
        if(message.author.discriminator !== '0000') return;
        if(message.content.indexOf(process.env.PREFIX) !== 0) return;
        const args = message.content.slice(process.env.PREFIX.length).trim().split(/ +/g);
        const command = args.shift().toLowerCase();

    if (command === 'mute') {

        message.delete();
        let new_args = args;
        let user = message.guild.members.get(new_args.shift());
        let time_formatted = new_args.shift();
        let reason = new_args.join(' ').trim();

        function getSeconds(str) {
            let seconds = 0;
            let years = str.match(/(\d+)\s*y/);
            let months = str.match(/(\d+)\s*M/);
            let weeks = str.match(/(\d+)\s*w/);
            let days = str.match(/(\d+)\s*d/);
            let hours = str.match(/(\d+)\s*h/);
            let minutes = str.match(/(\d+)\s*m/);
            let secs = str.match(/(\d+)\s*s/);
            if (years) { seconds += parseInt(years[1])*31556926; }
            if (months) { seconds += parseInt(months[1])*2592000; }
            if (weeks) { seconds += parseInt(weeks[1])*604800; }
            if (days) { seconds += parseInt(days[1])*86400; }
            if (hours) { seconds += parseInt(hours[1])*3600; }
            if (minutes) { seconds += parseInt(minutes[1])*60; }
            if (secs) { seconds += parseInt(secs[1]); }
            return seconds;
        }
        function getTimeInWords(str) {
            let text = '';
            let years = str.match(/(\d+)\s*y/);
            let months = str.match(/(\d+)\s*M/);
            let weeks = str.match(/(\d+)\s*w/);
            let days = str.match(/(\d+)\s*d/);
            let hours = str.match(/(\d+)\s*h/);
            let minutes = str.match(/(\d+)\s*m/);
            let secs = str.match(/(\d+)\s*s/);
            if (years) { text += years[1]+' '+declOfNum(parseInt(years[1]), ['–≥–æ–¥ ', '–≥–æ–¥–∞ ', '–ª–µ—Ç ']) }
            if (months) { text += months[1]+' '+declOfNum(parseInt(months[1]), ['–º–µ—Å—è—Ü ', '–º–µ—Å—è—Ü–∞ ', '–º–µ—Å—è—Ü–µ–≤ ']) }
            if (weeks) { text += weeks[1]+' '+declOfNum(parseInt(weeks[1]), ['–Ω–µ–¥–µ–ª—é ', '–Ω–µ–¥–µ–ª–∏ ', '–Ω–µ–¥–µ–ª—å ']) }
            if (days) { text += days[1]+' '+declOfNum(parseInt(days[1]), ['–¥–µ–Ω—å ', '–¥–Ω—è ', '–¥–Ω–µ–π']) }
            if (hours) { text += hours[1]+' '+declOfNum(parseInt(hours[1]), ['—á–∞—Å ', '—á–∞—Å–∞ ', '—á–∞—Å–æ–≤ ']) }
            if (minutes) { text += minutes[1]+' '+declOfNum(parseInt(minutes[1]), ['–º–∏–Ω—É—Ç—É ', '–º–∏–Ω—É—Ç—ã ', '–º–∏–Ω—É—Ç ']) }
            if (secs) { text += secs[1]+' '+declOfNum(parseInt(secs[1]), ['—Å–µ–∫—É–Ω–¥—É ', '—Å–µ–∫—É–Ω–¥—ã ', '—Å–µ–∫—É–Ω–¥ ']) }
            return text;
        }
        let time = getSeconds(time_formatted);
        if (time === 0) return;

        if (!user) return;
        // if (user.user.id === message.author.id) return message.channel.send({embed: embed_error(`${user.user}, –∏–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–º—É—Ç–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è.`)});
        if (user.user.bot) return message.channel.send({embed: embed_error(`${message.author}, –∏–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –Ω–∞–∫–∞–∑–∞—Ç—å –±–æ—Ç–∞`)});
        let reasontext = '';
        if (reason !== null && typeof reason !== undefined && reason !== '') reasontext = ` —Å –ø—Ä–∏—á–∏–Ω–æ–π \`${reason}\``;
        if (reason === null || typeof reason === undefined || reason === '') reason = '–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞.';
        message.delete();
        request(`http://${process.env.SITE_DOMAIN}/mute.php?id=${user.user.id}&time=${time*1000}&reason=${encodeURIComponent(reason)}&secret=${encodeURIComponent(process.env.SECRET_KEY)}&user=${message.author.id}`, function (error, response, body) {
            try {
                let data = JSON.parse(body);
                let footer = 'GameüåÄSpace #'+data.id;
                if (reason === null || typeof reason === 'undefined') reason = '–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞.';
                let embed = new Discord.RichEmbed()
                    .setTitle('–ú—É—Ç')
                    .addField('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', `${user.user} (\`${user.user.tag}\`)`, true)
                    .addField('–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä', `${client.user} (\`${client.user.tag}\`)`, true)
                    .addField('–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å', getTimeInWords(time_formatted), true)
                    .setFooter(footer)
                    .setColor('C34E4E');
                let dm_embed = new Discord.RichEmbed()
                    .setTitle('–ú—É—Ç')
                    .setDescription('–í—ã –±—ã–ª–∏ –∑–∞–º—É—á–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ GameSpace')
                    .addField('–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä', `${client.user} (\`${client.user.tag}\`)`, true)
                    .addField('–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å', getTimeInWords(time_formatted), true)
                    .setFooter(footer)
                    .setColor('C34E4E');
                if (reason !== null && typeof reason !== undefined && reason !== '') {embed.addField('–ü—Ä–∏—á–∏–Ω–∞', `${reason}`);dm_embed.addField('–ü—Ä–∏—á–∏–Ω–∞', `${reason}`);}
                message.guild.channels.get('426756919777165312').send({embed});
                user.send({embed});
                user.addRole('441280482529771520').catch(console.error);
                console.log(time);
                unmute(user, data.id, time*1000).catch(console.error);
            } catch (Exception) {}
        });

    }


    return;
}
 //–ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Ç–∏–ø–æ–≤ –∫–∞–Ω–∞–ª–æ–≤
    if (['dm', 'group', 'category', 'voice'].includes(message.channel.type)) return;

    if (['445108574688116746'].includes(message.channel.id)) return;
	
    if (getStringCapsPercent(message.content) > 80 && message.content.replace(/<a?:(.*?):\d+>/g, '').replace(/[^a-z–∞-—èA-Z–ê-–Ø–Ü–á–Å—ë—ñ—ó]/g, '').length > 5 && message.content !== '' && !message.author.bot) {
        let reason = '–ö–∞–ø—Å –≤ —á–∞—Ç–µ. –°–æ–æ–±—â–µ–Ω–∏–µ:\n'+message.content;
        request(`http://${process.env.SITE_DOMAIN}/warn.php?id=${message.author.id}&reason=${encodeURIComponent(reason)}&secret=${encodeURIComponent(process.env.SECRET_KEY)}&user=${client.user.id}`, function (error, response, body) {
            try {
                let data = JSON.parse(body);
                let footer = 'GameüåÄSpace #' + data.id;
                if (reason === null || typeof reason === 'undefined') reason = '–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞.';
                let embed = new Discord.RichEmbed()
                    .setTitle('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ')
                    // .setDescription(`**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** ${user.user}\n**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** ${message.author}\n**–ü—Ä–∏—á–∏–Ω–∞:**\n\n${reason}`)
                    .addField('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', `${message.author} (\`${message.author.tag}\`)`, true)
                    .addField('–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä', `${client.user} (\`${client.user.tag}\`)`, true)
                    .setFooter(footer)
                    .setColor('F1C40F');
                if (reason !== null && typeof reason !== undefined && reason !== '') embed.addField('–ü—Ä–∏—á–∏–Ω–∞', `${reason}`);
                message.channel.send(`${message.author} –ø–æ–ª—É—á–∏–ª –≤–∞—Ä–Ω –ø–æ –ø—Ä–∏—á–∏–Ω–µ \`–∫–∞–ø—Å –≤ —á–∞—Ç–µ\`. #${data.id}`);
                message.guild.channels.get('426756919777165312').send({embed});
            } catch (Exception) {
                message.channel.send('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ-–≤–∞—Ä–Ω–∞.')
            }
        });
    }

    let arr = ['gspace'];
    if (!message.member.roles.has('417267817763831808'))
    message.guild.fetchInvites().then(invites => {
        invites.forEach(invite => {
            arr.push(invite.code);
        });
        let matches = message.content.match(/discord(app\.com\/invite|\.gg|\.me|\.io)\/?([_a-zA-Z0-9]{1,32})/gi);
        if (matches)
        matches.forEach((match) => {
            let mtch = match.match(/discord(app\.com\/invite|\.gg|\.me|\.io)\/?([_a-zA-Z0-9]{1,32})/i);
            if (!arr.includes(mtch[3])) {
                let reason = '–û—Ç–ø—Ä–∞–≤–∏–ª –∏–Ω–≤–∞–π—Ç —Å—Å—ã–ª–∫—É: '+match;
                message.delete();
                request(`http://${process.env.SITE_DOMAIN}/warn.php?id=${message.author.id}&reason=${encodeURIComponent(reason)}&secret=${encodeURIComponent(process.env.SECRET_KEY)}&user=${client.user.id}`, function (error, response, body) {
                    try {
                        let data = JSON.parse(body);
                        let footer = 'GameüåÄSpace #'+data.id;
                        if (reason === null || typeof reason === 'undefined') reason = '–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞.';
                        let embed = new Discord.RichEmbed()
                            .setTitle('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ')
                            // .setDescription(`**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** ${user.user}\n**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** ${message.author}\n**–ü—Ä–∏—á–∏–Ω–∞:**\n\n${reason}`)
                            .addField('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', `${message.author} (\`${message.author.tag}\`)`, true)
                            .addField('–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä', `${client.user} (\`${client.user.tag}\`)`, true)
                            .setFooter(footer)
                            .setColor('F1C40F');
                        if (reason !== null && typeof reason !== undefined && reason !== '') embed.addField('–ü—Ä–∏—á–∏–Ω–∞', `${reason}`);
                        message.channel.send(`${message.author} –ø–æ–ª—É—á–∏–ª –≤–∞—Ä–Ω –ø–æ –ø—Ä–∏—á–∏–Ω–µ \`–∏–Ω–≤–∞–π—Ç-—Å—Å—ã–ª–∫–∞\`. #${data.id}`);
                        message.guild.channels.get('426756919777165312').send('', {embed});
                    } catch (Exception) {console.log(Exception);message.channel.send({embed: embed_error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ-–≤–∞—Ä–Ω–∞.')})}
                });
            }
        })
    }); //–∑–∑–∏–≥–µ—Ä –ª–æ—Ö —ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã


    if (['dm', 'group', 'category', 'voice'].includes(message.channel.type)) return;
    if (!['417266233562365952', '416813030232424462'].includes(message.guild.id)) {
        message.guild.leave().catch();
        return;
    }


	if(message.author.bot) return;
    if(message.content.indexOf(process.env.PREFIX) !== 0) return;

	const args = message.content.slice(process.env.PREFIX.length).trim().split(/ +/g);
  	const command = args.shift().toLowerCase();

    add_command(['warn', '–≤–∞—Ä–Ω', 'punish', '–Ω–∞–∫–∞–∑–∞—Ç—å', '–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', '–Ω–∞–∫–∞–∑–∞–Ω–∏–µ', '–ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç—å', '–æ—Ç–ø–æ—Ä–æ—Ç—å'], false, message, command, args, 'rules', ['MANAGE_MESSAGES'], function () {
        message.delete();
        let new_args = args;
        new_args.shift();
        let reason = new_args.join(' ').trim();

        let user = message.mentions.members.first();
        if (!user) return message.channel.send({embed: embed_error(`${message.author}, –∏–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —É–ø–æ–º—è–Ω—É–ª–∏, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —Å–µ—Ä–≤–µ—Ä–∞ –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`)});
        if (user.user.id === message.author.id) return message.channel.send({embed: embed_error(`${user.user}, –∏–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –Ω–∞–∫–∞–∑–∞—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è.`)});
        if (user.user.bot) return message.channel.send({embed: embed_error(`${message.author}, –∏–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –Ω–∞–∫–∞–∑–∞—Ç—å –±–æ—Ç–∞`)});
        let reasontext = '';
        if (reason !== null && typeof reason !== undefined && reason !== '') reasontext = ` —Å –ø—Ä–∏—á–∏–Ω–æ–π \`${reason}\``;
        if (reason === null || typeof reason === undefined || reason === '') reason = '–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞.';
        let accepting = message.channel.send(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–ø–∏—Å–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é \`${user.user.tag}\`${reasontext}?\n\n**–ù–∞–ø–∏—à–∏—Ç–µ \`–¥–∞\`, —á—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ–¥–∏—Ç—å.**`);
        const collector = new Discord.MessageCollector(message.channel, m => m.author.id === message.author.id, { time: 60000 });
        collector.on('collect', msg => {
            if (['–¥–∞', '–∞–≥–∞', '–∫–Ω—à', '–∫–æ–Ω–µ—á–Ω–æ', '–∫–æ–Ω–µ—à–Ω–æ', '–¥–∞–≤–∞–π', '–π–µ—Å', 'yes', 'y', 'aga', 'go', 'da', '–≥–æ'].includes(msg.content.toLowerCase())) {
                message.channel.startTyping();
                message.delete();
                request(`http://${process.env.SITE_DOMAIN}/warn.php?id=${user.user.id}&reason=${encodeURIComponent(reason)}&secret=${encodeURIComponent(process.env.SECRET_KEY)}&user=${message.author.id}`, function (error, response, body) {
                    try {
                        let data = JSON.parse(body);
                        let footer = 'GameüåÄSpace #' + data.id;
                        if (reason === null || typeof reason === 'undefined') reason = '–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞.';
                        let embed = new Discord.RichEmbed()
                            .setTitle('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ')
                            // .setDescription(`**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** ${user.user}\n**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** ${message.author}\n**–ü—Ä–∏—á–∏–Ω–∞:**\n\n${reason}`)
                            .addField('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', `${user.user} (\`${user.user.tag}\`)`, true)
                            .addField('–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä', `${message.author} (\`${message.author.tag}\`)`, true)
                            .setFooter(footer)
                            .setColor('F1C40F');
                        if (reason !== null && typeof reason !== undefined && reason !== '') embed.addField('–ü—Ä–∏—á–∏–Ω–∞', `${reason}`);
                        message.channel.send(`${user.user}`, {embed}).then(() => {
                            message.channel.stopTyping(true)
                        });
                        message.guild.channels.get('426756919777165312').send({embed});
                    } catch (Exception) {message.channel.send({embed: embed_error('–û—à–∏–±–∫–∞ –≤–∞—Ä–Ω–∞.')})}
                });
            }
            console.log(collector);
            collector.stop();
        });
    });

    add_command(['fwarn', '—Ñ–≤–∞—Ä–Ω', 'fpunish', '—Ñ–Ω–∞–∫–∞–∑–∞—Ç—å', '—Ñ–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', '—Ñ–Ω–∞–∫–∞–∑–∞–Ω–∏–µ', '—Ñ–ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç—å', '—Ñ–æ—Ç–ø–æ—Ä–æ—Ç—å'], false, message, command, args, 'rules', ['MANAGE_MESSAGES'], function () {
        message.delete();
        let new_args = args;
        let number = new_args.shift();
        new_args.shift();
        let reason = new_args.join(' ').trim();

        let user = message.mentions.members.first();
        if (!user) return message.channel.send({embed: embed_error(`${message.author}, –∏–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —É–ø–æ–º—è–Ω—É–ª–∏, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —Å–µ—Ä–≤–µ—Ä–∞ –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`)});
        if (user.user.id === message.author.id) return message.channel.send({embed: embed_error(`${user.user}, –∏–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –Ω–∞–∫–∞–∑–∞—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è.`)});
        if (user.user.bot) return message.channel.send({embed: embed_error(`${message.author}, –∏–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –Ω–∞–∫–∞–∑–∞—Ç—å –±–æ—Ç–∞`)});
        let reasontext = '';
        if (reason !== null && typeof reason !== undefined && reason !== '') reasontext = ` —Å –ø—Ä–∏—á–∏–Ω–æ–π \`${reason}\``;
        if (reason === null || typeof reason === undefined || reason === '') reason = '–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞.';
        let accepting = message.channel.send(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–ø–∏—Å–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é \`${user.user.tag}\`${reasontext}?\n\n**–ù–∞–ø–∏—à–∏—Ç–µ \`–¥–∞\`, —á—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ–¥–∏—Ç—å.**`);
        const collector = new Discord.MessageCollector(message.channel, m => m.author.id === message.author.id, { time: 60000 });
        collector.on('collect', msg => {
            if (['–¥–∞', '–∞–≥–∞', '–∫–Ω—à', '–∫–æ–Ω–µ—á–Ω–æ', '–∫–æ–Ω–µ—à–Ω–æ', '–¥–∞–≤–∞–π', '–π–µ—Å', 'yes', 'y', 'aga', 'go', 'da', '–≥–æ'].includes(msg.content.toLowerCase())) {
                message.delete();
                try {
                    let footer = 'GameüåÄSpace #' + number;
                    if (reason === null || typeof reason === 'undefined') reason = '–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞.';
                    let embed = new Discord.RichEmbed()
                        .setTitle('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ')
                        // .setDescription(`**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** ${user.user}\n**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** ${message.author}\n**–ü—Ä–∏—á–∏–Ω–∞:**\n\n${reason}`)
                        .addField('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', `${user.user} (\`${user.user.tag}\`)`, true)
                        .addField('–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä', `${message.author} (\`${message.author.tag}\`)`, true)
                        .setFooter(footer)
                        .setColor('F1C40F');
                    if (reason !== null && typeof reason !== undefined && reason !== '') embed.addField('–ü—Ä–∏—á–∏–Ω–∞', `${reason}`);
                    message.channel.send(`${user.user}`, {embed}).then(() => {
                        message.channel.stopTyping(true)
                    });
                    message.guild.channels.get('426756919777165312').send({embed});
                } catch (Exception) {message.channel.send({embed: embed_error('–û—à–∏–±–∫–∞ –≤–∞—Ä–Ω–∞.')})}
            }
            console.log(collector);
            collector.stop();
        });
    });

    add_command(['mod_eval'], false, message, command, args, 'creat', null, function () {
        try {
            let code = args.join(" ");
            eval(code);
        } catch (err) {}
    }, 'hid');
    add_command(['ban', '–±–∞–Ω', '–±–∞–Ω–∞–Ω'], false, message, command, args, 'roles', ['450336165430689793'], function () {
        args.shift();
        message.channel.send('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '+message.mentions.users.first()+' –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω –ø–æ –ø—Ä–∏—á–∏–Ω–µ: `'+args.join(' ')+'`.');
        message.mentions.users.first().send('–í—ã –±—ã–ª–∏ –∑–∞–±–∞–Ω–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ GameSpace –ø–æ –ø—Ä–∏—á–∏–Ω–µ:\n `'+args.join(' ')+'`.\n–ß—Ç–æ–± –ø–æ–ª—É—á–∏—Ç—å —Ä–∞–∑–±–∞–Ω –≤—ã –¥–æ–ª–∂–Ω—ã –æ–ø–ª–∞—Ç–∏—Ç—å 300 —Ä—É–± –≤ –ª—Å <@222746438814138368>');
    }, 'hid');


    add_command(['–Ω–∞—Ä—É—à–µ–Ω–∏—è', '–Ω–∞–∫–∞–∑–∞–Ω–∏—è', '–≤–∞—Ä–Ω—ã', '–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è', '–º—É—Ç—ã', 'punishments', 'warns', 'mutes'], false, message, command, args, 'e', null, function () {
        message.delete();
        let user = message.mentions.members.first();
        let requested = '';
        let user_molodec = `${message.author}, –º–æ–∂–µ—Ç–µ –≥–æ—Ä–¥–∏—Ç—å—Å—è, –≤—ã - –º–æ–ª–æ–¥–µ—Ü!`;
        if (user) {
            if (!message.member.hasPermission('MANAGE_MESSAGES', false, true, true))
                return message.channel.send({embed: embed_error('–í—ã –Ω–µ –∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤–∞ `MANAGE_MESSAGES`, –∫–æ—Ç–æ—Ä–æ–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —á—É–∂–∏—Ö –Ω–∞—Ä—É—à–µ–Ω–∏–π\n\n–ï—Å–ª–∏ –í—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –Ω–µ —Ç–∞–∫ - –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ <@421030089732653057>')});
            requested = `, –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${message.author} (\`${message.author.tag}\`)`;
            user_molodec = `${user} - –º–æ–ª–æ–¥–µ—Ü!`;
        } else {
            user = message.member;
        }
        let page = args[0];
        if (!isNumeric(page)) page = 1;
        request(`http://${process.env.SITE_DOMAIN}/punishments.php?&secret=${encodeURIComponent(process.env.SECRET_KEY)}&user=${user.user.id}`, function (error, response, body) {
            try {
                let data1 = JSON.parse(body);
                let data = [''].concat(data1);
                let punishments = '';
                console.log(data1);
                let limit = 5;
                let all_pages = Math.ceil(data.length/limit);
                console.log(all_pages);
                let current_page = parseInt(page);
                if (current_page > all_pages || current_page < 1 || !isNumeric(page))
                    current_page = 1;
                console.log(current_page);
                let all_data = data.slice(1+((current_page-1)*limit), (limit+1)+((current_page-1)*limit));
                console.log(all_data);
                let user_text = '';
                if (user !== message.member) user_text = ` ${user}`;
                let next_page = ``;
                if (current_page < all_pages) next_page = `–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤–≤–µ–¥–∏—Ç–µ:\n${process.env.PREFIX}${command} ${current_page+1}${user_text}`;
                let footer = '–°—Ç—Ä. '+current_page+'/'+all_pages+'; '+data.filter(pun => pun['type'] === 'warn' && pun['deleted'] === false).length+' '+declOfNum(data.filter(pun => pun['type'] === 'warn' && pun['deleted'] === false).length, ['–≤–∞—Ä–Ω', '–≤–∞—Ä–Ω–∞', '–≤–∞—Ä–Ω–æ–≤'])+'; '+data.filter(pun1=>pun1['type'] === 'mute' && pun1['deleted'] === false).length+' '+declOfNum(data.filter(pun1=>pun1['type'] === 'mute' && pun1['deleted'] === false).length, ['–º—É—Ç', '–º—É—Ç–∞', '–º—É—Ç–æ–≤']);
                all_data.forEach(function (item, num) {
                    if (item['deleted'] === '1') return;
                    if (item === [] || item === '') return;
                    console.log('cho?');
                    let type;
                    switch (item['type']) {
                        case 'warn':
                            type = '–í–∞—Ä–Ω\\üö´';
                            break;
                        case 'mute':
                            type = '–ú—É—Ç\\üò†';
                            break;
                        case 'kick':
                            type = '–ö–∏–∫\\üëø';
                            break;
                        default:
                            type = '–í–∞—Ä–Ω';
                    }
                    punishments = punishments + '***–ù–∞—Ä—É—à–µ–Ω–∏–µ*** *(ID: `' + item['id'] + '`)*\n';
                    punishments = punishments + '**–¢–∏–ø: __' + type + '__**\n';
                    punishments = punishments + '**–û—Ç:** ' + message.guild.members.get(item['user_from']).toString() + '(`' + message.guild.members.get(item['user_from']).user.tag + '`)\n';
                    if (item['type'] === 'mute') {

                        punishments = punishments + '**–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:** ' + item['time'] + '–º—Å\n';
                    }
                    if (item['type'] === 'mute') {
                        let zak;
                        if (item['unmuted']) zak = '–ù–µ—Ç';
                        else zak = '–î–∞';
                        punishments = punishments + '**–î–µ–π—Å—Ç–≤—É–µ—Ç?** ' + zak + '\n';
                        if (item['unmuted']) {
                            punishments = punishments + '**–†–∞–∑–º—É—Ç –æ—Ç:** ' + message.guild.members.get(item['unmute_who_id']).toString() + '\n';
                            punishments = punishments + '**–ü—Ä–∏—á–∏–Ω–∞ —Ä–∞–∑–º—É—Ç–∞: ' + item['unmute_reason'] + '**\n';
                        }
                    }
                    punishments = punishments + '|\\‚ö† = **' + item['reason'].replace(/` /g, '\'').replace(/\n/g, ' ') + '**\n\n';
                });
                if (punishments === '' && current_page === 1) punishments = `–ù–∞—Ä—É—à–µ–Ω–∏–π –Ω–µ—Ç. ${user_molodec} :thumbsup::skin-tone-2:\n\n`;
                let embed = new Discord.RichEmbed()
                    .setTitle('–°–ø–∏—Å–æ–∫ –Ω–∞—Ä—É—à–µ–Ω–∏–π')
                    .setDescription(`–î–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ ${user.user} (\`${user.user.tag}\`)${requested}\n\n${punishments}${next_page}`)
                    .setFooter(footer)
                    .setColor('F1C40F');
                message.channel.send(`${user.user}`, {embed}).then(() => {message.channel.stopTyping(true)});
            } catch (Exception) {message.channel.send({embed: embed_error('–û—à–∏–±–∫–∞ –≤–∞—Ä–Ω–∞.')})}
        });
    });

    add_command(['un-warn', 'un_warn', 'unwarn', '–∞–Ω-–≤–∞—Ä–Ω', '–∞–Ω_–≤–∞—Ä–Ω', '–∞–Ω–≤–∞—Ä–Ω', '—É–¥–∞–ª–∏—Ç—å_–Ω–∞–∫–∞–∑–∞–Ω–∏–µ', '—É–¥–∞–ª–∏—Ç—å-–Ω–∞–∫–∞–∑–∞–Ω–∏–µ'], false, message, command, args, 'rules', ['MANAGE_MESSAGES'], function () {
        message.delete();
        let new_args = args;
        let warn = new_args.shift();
        let reason = new_args.join(' ').trim();

        let reasontext = '';
        if (reason !== null && typeof reason !== undefined && reason !== '') reasontext = ` —Å –ø—Ä–∏—á–∏–Ω–æ–π \`${reason}\``;
        if (reason === null || typeof reason === undefined || reason === '') reason = '–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞.';

        message.channel.startTyping();
        request(`http://${process.env.SITE_DOMAIN}/get_warn.php?warn=${warn}&secret=${encodeURIComponent(process.env.SECRET_KEY)}&user=${message.author.id}`, function (error, response, body) {
            try {
            message.channel.stopTyping(true);
            console.log(body);
            if (body.trim() === '[]') return message.channel.send({embed: embed_error(`${message.author}, –∏–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –¥–∞–Ω–Ω–æ–≥–æ –≤–∞—Ä–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`)});
            let data2 = JSON.parse(body);
            if (data2['type'] !== 'warn') return message.channel.send({embed: embed_error(`${message.author}, –∏–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –¥–∞–Ω–Ω–æ–≥–æ –≤–∞—Ä–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`)});
            if (data2['discord_id'] === message.author.id) return message.channel.send({embed: embed_error(`${message.author}, –∏–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å –Ω–∞–∫–∞–∑–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—ã–ª–æ –∞–¥—Ä–µ—Å–æ–≤–∞–Ω–æ –≤–∞–º`)});
            let const_embed = new Discord.RichEmbed()
                .setTitle('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ')
                // .setDescription(`**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** ${user.user}\n**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** ${message.author}\n**–ü—Ä–∏—á–∏–Ω–∞:**\n\n${reason}`)
                .addField('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', `${message.guild.members.get(data2['discord_id']).user} (\`${message.guild.members.get(data2['discord_id']).user.tag}\`)`, true)
                .addField('–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä', `${message.guild.members.get(data2['user_from']).user} (\`${message.guild.members.get(data2['user_from']).user.tag}\`)`, true)
                .addField('–ü—Ä–∏—á–∏–Ω–∞', `${data2['reason']}`)
                .setFooter('GameüåÄSpace #'+data2.id)
                .setColor('F1C40F');
            let accepting = message.channel.send(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –≤–∞—Ä–Ω? –ù–∞–ø–∏—à–∏—Ç–µ \`–¥–∞\`, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.`, {embed: const_embed});
            const collector = new Discord.MessageCollector(message.channel, m => m.author.id === message.author.id, {time: 60000});
            collector.on('collect', msg => {
                if (['–¥–∞', '–∞–≥–∞', '–∫–Ω—à', '–∫–æ–Ω–µ—á–Ω–æ', '–∫–æ–Ω–µ—à–Ω–æ', '–¥–∞–≤–∞–π', '–π–µ—Å', 'yes', 'y', 'aga', 'go', 'da', '–≥–æ'].includes(msg.content.toLowerCase())) {
                    message.channel.startTyping();
                    request(`http://${process.env.SITE_DOMAIN}/remove_warn.php?warn=${warn}&reason=${encodeURIComponent(reason)}&secret=${encodeURIComponent(process.env.SECRET_KEY)}&user=${message.author.id}`, function (error, response, body) {
                        try {
                        message.channel.stopTyping(true);
                        let footer = 'GameüåÄSpace #' + data2['id'];
                        let embed = new Discord.RichEmbed()
                            .setTitle('–£–¥–∞–ª–µ–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ')
                            .addField('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', `${message.guild.members.get(data2['discord_id']).user} (\`${message.guild.members.get(data2['discord_id']).user.tag}\`)`, true)
                            .addField('–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä', `${message.author} (\`${message.author.tag}\`)`, true)
                            .addField('–ü—Ä–∏—á–∏–Ω–∞', `${data2['reason']}`)
                            .addField('–ö—Ç–æ —É–¥–∞–ª–∏–ª?', `${message.author}`, true)
                            .addField('–ü—Ä–∏—á–∏–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è', `${reason}`)
                            .setFooter(footer)
                            .setColor('F1C40F');
                        message.guild.channels.get('426756919777165312').send({embed});
                        message.channel.send({embed});
                        } catch (Exception) {message.channel.send({embed: embed_error('–û—à–∏–±–∫–∞ –∞–Ω-–≤–∞—Ä–Ω–∞.')})}
                    });
                }
                console.log(collector);
                collector.stop();
            });
            } catch (Exception) {message.channel.send({embed: embed_error('–û—à–∏–±–∫–∞ –∞–Ω-–≤–∞—Ä–Ω–∞.')})}
        });
    });
    add_command(['mute', '–º—É—Ç', '–∑–∞–∫–ª–µ–∏—Ç—å_—Ä–æ—Ç', '–∑–∞—Ç–∫–Ω—É—Ç—å', '–∑–∞—Ç–∫–Ω–∏—Å—å', '–∑–∞–∫—Ä–æ–π—Å—è'], false, message, command, args, 'rules', ['MANAGE_MESSAGES'], function () {
        message.delete();
        let new_args = args;
        new_args.shift();
        let time_formatted = new_args.shift();
        let reason = new_args.join(' ').trim();

        function getSeconds(str) {
            let seconds = 0;
            let years = str.match(/(\d+)\s*y/);
            let months = str.match(/(\d+)\s*M/);
            let weeks = str.match(/(\d+)\s*w/);
            let days = str.match(/(\d+)\s*d/);
            let hours = str.match(/(\d+)\s*h/);
            let minutes = str.match(/(\d+)\s*m/);
            let secs = str.match(/(\d+)\s*s/);
            if (years) { seconds += parseInt(years[1])*31556926; }
            if (months) { seconds += parseInt(months[1])*2592000; }
            if (weeks) { seconds += parseInt(weeks[1])*604800; }
            if (days) { seconds += parseInt(days[1])*86400; }
            if (hours) { seconds += parseInt(hours[1])*3600; }
            if (minutes) { seconds += parseInt(minutes[1])*60; }
            if (secs) { seconds += parseInt(secs[1]); }
            return seconds;
        }
        function getTimeInWords(str) {
            let text = '';
            let years = str.match(/(\d+)\s*y/);
            let months = str.match(/(\d+)\s*M/);
            let weeks = str.match(/(\d+)\s*w/);
            let days = str.match(/(\d+)\s*d/);
            let hours = str.match(/(\d+)\s*h/);
            let minutes = str.match(/(\d+)\s*m/);
            let secs = str.match(/(\d+)\s*s/);
            if (years) { text += years[1]+' '+declOfNum(parseInt(years[1]), ['–≥–æ–¥ ', '–≥–æ–¥–∞ ', '–ª–µ—Ç ']) }
            if (months) { text += months[1]+' '+declOfNum(parseInt(months[1]), ['–º–µ—Å—è—Ü ', '–º–µ—Å—è—Ü–∞ ', '–º–µ—Å—è—Ü–µ–≤ ']) }
            if (weeks) { text += weeks[1]+' '+declOfNum(parseInt(weeks[1]), ['–Ω–µ–¥–µ–ª—é ', '–Ω–µ–¥–µ–ª–∏ ', '–Ω–µ–¥–µ–ª—å ']) }
            if (days) { text += days[1]+' '+declOfNum(parseInt(days[1]), ['–¥–µ–Ω—å ', '–¥–Ω—è ', '–¥–Ω–µ–π']) }
            if (hours) { text += hours[1]+' '+declOfNum(parseInt(hours[1]), ['—á–∞—Å ', '—á–∞—Å–∞ ', '—á–∞—Å–æ–≤ ']) }
            if (minutes) { text += minutes[1]+' '+declOfNum(parseInt(minutes[1]), ['–º–∏–Ω—É—Ç—É ', '–º–∏–Ω—É—Ç—ã ', '–º–∏–Ω—É—Ç ']) }
            if (secs) { text += secs[1]+' '+declOfNum(parseInt(secs[1]), ['—Å–µ–∫—É–Ω–¥—É ', '—Å–µ–∫—É–Ω–¥—ã ', '—Å–µ–∫—É–Ω–¥ ']) }
            return text;
        }
        let time = getSeconds(time_formatted);
        if (time === 0) return message.channel.send({embed: embed_error(`${message.author}, –∏–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–º—É—Ç–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ –Ω–∞ 0 —Å–µ–∫—É–Ω–¥.`)});

        let user = message.mentions.members.first();
        if (!user) return message.channel.send({embed: embed_error(`${message.author}, –∏–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —É–ø–æ–º—è–Ω—É–ª–∏, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —Å–µ—Ä–≤–µ—Ä–∞ –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`)});
        // if (user.user.id === message.author.id) return message.channel.send({embed: embed_error(`${user.user}, –∏–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–º—É—Ç–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è.`)});
        if (user.user.bot) return message.channel.send({embed: embed_error(`${message.author}, –∏–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –Ω–∞–∫–∞–∑–∞—Ç—å –±–æ—Ç–∞`)});
        let reasontext = '';
        if (reason !== null && typeof reason !== undefined && reason !== '') reasontext = ` —Å –ø—Ä–∏—á–∏–Ω–æ–π \`${reason}\``;
        if (reason === null || typeof reason === undefined || reason === '') reason = '–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞.';
        let accepting = message.channel.send(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è \`${user.user.tag}\` –Ω–∞ ${getTimeInWords(time_formatted)}${reasontext}?\n\n**–ù–∞–ø–∏—à–∏—Ç–µ \`–¥–∞\`, —á—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ–¥–∏—Ç—å.**`);
        const collector = new Discord.MessageCollector(message.channel, m => m.author.id === message.author.id, { time: 60000 });
        collector.on('collect', msg => {
            if (['–¥–∞', '–∞–≥–∞', '–∫–Ω—à', '–∫–æ–Ω–µ—á–Ω–æ', '–∫–æ–Ω–µ—à–Ω–æ', '–¥–∞–≤–∞–π', '–π–µ—Å', 'yes', 'y', 'aga', 'go', 'da', '–≥–æ'].includes(msg.content.toLowerCase())) {
                message.channel.startTyping();
                message.delete();
                request(`http://${process.env.SITE_DOMAIN}/mute.php?id=${user.user.id}&time=${time*1000}&reason=${encodeURIComponent(reason)}&secret=${encodeURIComponent(process.env.SECRET_KEY)}&user=${message.author.id}`, function (error, response, body) {
                    try {
                    let data = JSON.parse(body);
                    let footer = 'GameüåÄSpace #'+data.id;
                    if (reason === null || typeof reason === 'undefined') reason = '–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞.';
                    let embed = new Discord.RichEmbed()
                        .setTitle('–ú—É—Ç')
                        .addField('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', `${user.user} (\`${user.user.tag}\`)`, true)
                        .addField('–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä', `${message.author} (\`${message.author.tag}\`)`, true)
                        .addField('–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å', getTimeInWords(time_formatted), true)
                        .setFooter(footer)
                        .setColor('C34E4E');
                    let dm_embed = new Discord.RichEmbed()
                        .setTitle('–ú—É—Ç')
                        .setDescription('–í—ã –±—ã–ª–∏ –∑–∞–º—É—á–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ GameSpace')
                        .addField('–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä', `${message.author} (\`${message.author.tag}\`)`, true)
                        .addField('–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å', getTimeInWords(time_formatted), true)
                        .setFooter(footer)
                        .setColor('C34E4E');
                    if (reason !== null && typeof reason !== undefined && reason !== '') {embed.addField('–ü—Ä–∏—á–∏–Ω–∞', `${reason}`);dm_embed.addField('–ü—Ä–∏—á–∏–Ω–∞', `${reason}`);}
                    message.channel.send(`${user.user}`, {embed}).then(() => {message.channel.stopTyping(true)}).then(() => {if (message.author.id === user.user.id) message.channel.send(`${message.author}, –Ω–µ –Ω—É —Ç—ã –∏ –¥–æ–ª–±–æ–µ–± –±—Ä–∞—Ç–∏—à–∫–∞, –∑–µ–º–ª—è —Ç–µ–±–µ –ø—É—Ö–æ–º... ${client.emojis.get(emojis.facepalm)}`)});
                    message.guild.channels.get('426756919777165312').send({embed});
                    user.send({embed});
                    user.addRole('450162523199766528').catch(console.error);
                    console.log(time);
                    unmute(user, data.id, time*1000).catch(console.error);
                    } catch (Exception) {message.channel.send({embed: embed_error('–û—à–∏–±–∫–∞ –º—É—Ç–∞.')})}
                });
            }
            console.log(collector);
            collector.stop();
        });
    });
    add_command(['un-mute', 'unmute', '–∞–Ω–º—É—Ç', '–∞–Ω–º—É—Ç–∏—Ç—å', '–∑–∞–∞–Ω–º—É—Ç–∏—Ç—å', '—Ä–∞–∑–º—É—Ç', '—Ä–∞–∑–º—É—Ç–∏—Ç—å', '—Ä–∞–∑–∫–ª–µ–∏—Ç—å_—Ä–æ—Ç', '–æ—Ç–∫–ª–µ–∏—Ç—å_—Ä–æ—Ç'], false, message, command, args, 'rules', ['MANAGE_MESSAGES'], function () {
        let member = message.mentions.members.first();
        if (!member) return message.channel.send({embed: embed_error('–î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —Å–µ—Ä–≤–µ—Ä–∞')});
        args.shift();
        let reason = args.join(' ');
        request(`http://${process.env.SITE_DOMAIN}/auto_unmute.php?reason=${encodeURIComponent(reason)}&secret=${encodeURIComponent(process.env.SECRET_KEY)}&user=${message.author.id}&id=${member.user.id}`, function (error, response, body) {
            message.channel.send(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${member} –±—ã–ª —Ä–∞–∑–º—É—á–µ–Ω.`);
            message.author.send('–í—ã –±—ã–ª–∏ —Ä–∞–∑–º—É—á–µ–Ω—ã.')
        });
        member.removeRole('450162523199766528').catch(console.error);
    });
    add_command(['splooter-nick'], false, message, command, args, 'roles', ['419562566512017415'], function () {
        message.delete();
        if (splooter) {
            splooter = false;
            message.channel.send('–æ—Ñ—Ñ–Ω—É–ª');
        } else {
            splooter = true;
            message.guild.members.get('329240046337261569').setNickname('splooter').catch();
            message.channel.send('–≤—Ä—É–±–∏–ª');
        }
    }, 'hid');
});

client.login(process.env.BOT_TOKEN).catch(err => {console.log(err)});
process.env.BOT_TOKEN = process.env.POSLANIYE;
